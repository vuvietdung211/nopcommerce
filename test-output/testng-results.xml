<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-19T09:54:55Z" name="NopCommerce" finished-at="2023-04-19T09:55:08Z" duration-ms="13466">
    <groups>
    </groups>
    <test started-at="2023-04-19T09:54:55Z" name="Run on Chrome" finished-at="2023-04-19T09:55:08Z" duration-ms="13466">
      <class name="testcases.user.TestCase01_Register">
        <test-method is-config="true" signature="beforeClass(java.lang.String, java.lang.String)[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:54:55Z" name="beforeClass" finished-at="2023-04-19T09:55:01Z" duration-ms="6012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dev]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="User_01_Register_Empty()[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:55:01Z" name="User_01_Register_Empty" finished-at="2023-04-19T09:55:02Z" duration-ms="1631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_01_Register_Empty -->
        <test-method signature="User_02_Register_Wrong_Email()[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:55:03Z" name="User_02_Register_Wrong_Email" finished-at="2023-04-19T09:55:03Z" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_02_Register_Wrong_Email -->
        <test-method signature="User_03_Register_Success()[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:55:03Z" name="User_03_Register_Success" finished-at="2023-04-19T09:55:05Z" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_03_Register_Success -->
        <test-method signature="User_04_Register_Existing_Email()[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:55:06Z" name="User_04_Register_Existing_Email" finished-at="2023-04-19T09:55:08Z" duration-ms="1625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_04_Register_Existing_Email -->
        <test-method signature="User_05_Register_Invalid_Password()[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:55:08Z" name="User_05_Register_Invalid_Password" finished-at="2023-04-19T09:55:08Z" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_05_Register_Invalid_Password -->
        <test-method signature="User_06_Register_Confirm_Password_Not_Match()[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:55:08Z" name="User_06_Register_Confirm_Password_Not_Match" finished-at="2023-04-19T09:55:08Z" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_06_Register_Confirm_Password_Not_Match -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testcases.user.TestCase01_Register@5eb97ced]" started-at="2023-04-19T09:55:08Z" name="afterClass" finished-at="2023-04-19T09:55:08Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testcases.user.TestCase01_Register -->
    </test> <!-- Run on Chrome -->
  </suite> <!-- NopCommerce -->
</testng-results>
